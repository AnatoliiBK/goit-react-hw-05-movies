{"version":3,"file":"static/js/438.4a9c8a4d.chunk.js","mappings":"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","sources":["components/movies/Cast.jsx","components/movies/MovieDetails.jsx","components/movies/Reviews.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    \n    axios\n      .get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=889c6c698b758e37f5a9c5b22a486a89`)\n      .then(response => {\n        setCast(response.data.cast);\n      })\n      .catch(error => {\n        console.error('Помилка при отриманні акторського складу:', error);\n      });\n  }, [movieId]);\n\n  return (\n    <div className='decor'>\n      <h2>Actors Cast</h2>\n      {cast.map(actor => (\n        <div key={actor.id}>\n          <img src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`} alt={actor.name} width={200} />\n          <p className='actor-name'>\n            {actor.name}\n          </p>\n          <p className='actor-character'>Character: {actor.character}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Cast;\n// export const Cast = () => {\n//   const { movieId } = useParams();\n//   const [cast, setCast] = useState([]);\n\n//   useEffect(() => {\n//     \n//     axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=889c6c698b758e37f5a9c5b22a486a89`)\n//       .then(response => {\n//         setCast(response.data.cast);\n//       })\n//       .catch(error => {\n//         console.error('Помилка при отриманні акторського складу:', error);\n//       });\n//   }, [movieId]);\n\n//   return (\n//     <div>\n//       <h2>Cast</h2>\n//       {cast.map(actor => (\n//         <div key={actor.id}>\n//           {actor.name} as {actor.character}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n","import React, { useEffect, useState } from 'react';\nimport { useParams, Link, Route, Routes, Outlet, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n// import { Cast } from './Cast';\n// import { Reviews } from './Reviews';\nimport Cast from './Cast';\nimport Reviews from './Reviews';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Викликати API TMDb для отримання детальної інформації про фільм\n    axios\n      .get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=889c6c698b758e37f5a9c5b22a486a89`)\n      .then(response => {\n        setMovie(response.data);\n      })\n      .catch(error => {\n        console.error('Помилка при отриманні детальної інформації про фільм:', error);\n      });\n  }, [movieId]);\n\n  if (!movie) {\n    return <div>Loading...</div>;\n  }\n\n  \n  const releaseYear = movie.release_date.split('-')[0];\n\n  const handleGoBack = () => {\n    navigate(-1); \n  };\n\n  return (\n    <div className='decor'>\n      <div className='card'>\n        <div className='card-first'>\n          <button onClick={handleGoBack}>Go back</button>\n          <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} width={300}/>\n        </div>\n        <div className='card-four'>\n          <div className='card-sec'>\n            <h2>{movie.title}</h2>\n            <p className='releaseYear'>({releaseYear})</p>\n          </div>\n          <div className='card-th'>\n            <p className='user-score'>User Score: {movie.vote_average}</p>\n            <p><span className='overview'>Overview:</span><br></br> {movie.overview}</p>\n            <p className='genres'>Genres: <br></br><span className='genres-list'>{movie.genres.map(genre => genre.name).join(', ')}</span></p>\n          </div>\n        </div>\n      </div>\n\n      <div className='decor'>\n        <h3>Additional Information</h3>\n        <ul>\n          <li>\n            <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n          </li>\n          <li>\n            <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n          </li>\n        </ul>\n      </div>\n\n      <Routes>\n        <Route\n          path=\"/movies/:movieId/cast\"\n          element={\n            <div>\n              <Cast />\n              <MovieDetails />\n            </div>\n          }\n        />\n        <Route\n          path=\"/movies/:movieId/reviews\"\n          element={\n            <div>\n              <Reviews />\n              <MovieDetails />\n            </div>\n          }\n        />\n      </Routes>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n\n\n\n\n// import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n\n// export const MovieDetails = () => {\n//   const { movieId } = useParams();\n//   const [movie, setMovie] = useState(null);\n\n//   useEffect(() => {\n\n//     axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=889c6c698b758e37f5a9c5b22a486a89`)\n//       .then(response => {\n//         setMovie(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Помилка при отриманні деталей фільму:', error);\n//       });\n//   }, [movieId]);\n\n//   if (!movie) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       <h2>{movie.title}</h2>\n//       <p>Overview: {movie.overview}</p>\n//       {/* Додаткова інформація про фільм */}\n//       {/* Наприклад, акторський склад, відгуки тощо */}\n//     </div>\n//   );\n// }\n\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    \n    axios\n      .get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=889c6c698b758e37f5a9c5b22a486a89`)\n      .then(response => {\n        setReviews(response.data.results);\n      })\n      .catch(error => {\n        console.error('Помилка при отриманні відгуків:', error);\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      {reviews.length > 0 ? (\n        reviews.map(review => (\n          <ul key={review.id} className=\"review-list\">\n            <li className=\"review-link\">Author: {review.author}</li>\n            <p>{review.content}</p>\n          </ul>\n        ))\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n\n\n// import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n\n// export const Reviews = () => {\n//   const { movieId } = useParams();\n//   const [reviews, setReviews] = useState([]);\n\n//   useEffect(() => {\n//     \n//     axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=889c6c698b758e37f5a9c5b22a486a89`)\n//       .then(response => {\n//         setReviews(response.data.results);\n//       })\n//       .catch(error => {\n//         console.error('Помилка при отриманні відгуків:', error);\n//       });\n//   }, [movieId]);\n\n//   return (\n//     <div>\n//       <h2>Reviews</h2>\n//       {reviews.map(review => (\n//         <ul key={review.id} className='review-list'>\n//           <li className='review-link'>Author: {review.author}</li>\n//           <p>{review.content}</p>\n//         </ul>\n//       ))}\n//     </div>\n//   );\n// }\n\n"],"names":["movieId","useParams","useState","cast","setCast","useEffect","axios","then","response","data","catch","error","console","className","map","actor","src","profile_path","alt","name","width","character","id","MovieDetails","movie","setMovie","navigate","useNavigate","releaseYear","release_date","split","onClick","poster_path","title","vote_average","overview","genres","genre","join","to","path","element","reviews","setReviews","results","length","review","author","content"],"sourceRoot":""}