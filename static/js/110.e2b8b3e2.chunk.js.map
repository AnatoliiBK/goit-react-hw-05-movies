{"version":3,"file":"static/js/110.e2b8b3e2.chunk.js","mappings":"8LA0CA,UArCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAERC,EAAAA,EAAAA,IAAA,6CAC6CN,EAD7C,sDAEGO,MAAK,SAAAC,GACJJ,EAAWI,EAASC,KAAKC,QAC1B,IACAC,OAAM,SAAAC,GACLC,QAAQD,MAAM,4BAA6BA,EAC5C,GACJ,GAAE,CAACZ,KAGF,4BACE,oCACCG,EAAQW,OAAS,EAChBX,EAAQY,KAAI,SAAAC,GAAM,OAChB,gBAAoBC,UAAU,cAA9B,WACE,gBAAIA,UAAU,cAAd,qBAAqCD,EAAOE,WAC5C,uBAAIF,EAAOG,YAFJH,EAAOI,GADA,KAOlB,sEAIP,C","sources":["components/movies/Reviews.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    \n    axios\n      .get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=889c6c698b758e37f5a9c5b22a486a89`)\n      .then(response => {\n        setReviews(response.data.results);\n      })\n      .catch(error => {\n        console.error('Error receiving feedback:', error);\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      {reviews.length > 0 ? (\n        reviews.map(review => (\n          <ul key={review.id} className=\"review-list\">\n            <li className=\"review-link\">Author: {review.author}</li>\n            <p>{review.content}</p>\n          </ul>\n        ))\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </div>\n  );\n};\n\nReviews.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","axios","then","response","data","results","catch","error","console","length","map","review","className","author","content","id"],"sourceRoot":""}